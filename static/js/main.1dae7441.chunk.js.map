{"version":3,"sources":["components/Reader/Loader/Loader.js","components/App.js","index.js"],"names":["spinnerStyles","position","left","top","transform","Loading","_ref","error","timedOut","pastDelay","retry","react_default","a","createElement","type","onClick","dist_default","name","color","fadeIn","style","defaultProps","AsyncReaderPage","Loadable","loader","__webpack_require__","e","then","bind","loading","Loader","timeout","delay","App","react_router","path","component","from","to","ReactDOM","render","react_router_dom","basename","document","querySelector"],"mappings":"0NAIMA,EAAgB,CACpBC,SAAU,QACVC,KAAM,MACNC,IAAK,MACLC,UAAW,yBAGPC,EAAU,SAAAC,GAA2C,IAAxCC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,SAAUC,EAAuBH,EAAvBG,UAAWC,EAAYJ,EAAZI,MAC7C,OAAIH,EAEAI,EAAAC,EAAAC,cAAA,oBAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,QAASL,GAA/B,UAOFF,EAEAG,EAAAC,EAAAC,cAAA,mCAEEF,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,QAASL,GAA/B,UAOFD,EAEAE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,KAAK,wBACLC,MAAM,YACNC,OAAO,OACPC,MAAOpB,KAMR,MAGTK,EAAQgB,aAAe,CACrBd,MAAO,QACPC,SAAU,WACVC,UAAW,YACXC,MAAO,SAUML,QC5DTiB,EAAkBC,IAAS,CAC/BC,OAAQ,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WACdC,QAASC,EACTC,QAAS,IACTC,MAAO,MAYMC,EATH,kBACVtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACEvB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWd,IACjCX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAUG,KAAK,KAAKC,GAAG,eCX7BC,IAASC,OACP7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAYC,SAAS,KACnB/B,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAOE,UAAWH,KAEpBU,SAASC,cAAc","file":"static/js/main.1dae7441.chunk.js","sourcesContent":["import React from 'react';\nimport Spinner from 'react-spinkit';\nimport PropTypes from 'prop-types';\n\nconst spinnerStyles = {\n  position: 'fixed',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nconst Loading = ({ error, timedOut, pastDelay, retry }) => {\n  if (error) {\n    return (\n      <div>\n        Error!\n        <br />\n        <button type=\"button\" onClick={retry}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (timedOut) {\n    return (\n      <div>\n        Taking a long time...\n        <button type=\"button\" onClick={retry}>\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (pastDelay) {\n    return (\n      <div>\n        <Spinner\n          name=\"line-spin-fade-loader\"\n          color=\"steelblue\"\n          fadeIn=\"none\"\n          style={spinnerStyles}\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nLoading.defaultProps = {\n  error: 'error',\n  timedOut: 'timedOut',\n  pastDelay: 'pastDelay',\n  retry: 'retry',\n};\n\nLoading.propTypes = {\n  error: PropTypes.func,\n  timedOut: PropTypes.bool,\n  pastDelay: PropTypes.bool,\n  retry: PropTypes.func,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Loadable from 'react-loadable';\nimport Loader from './Reader/Loader/Loader';\n\nconst AsyncReaderPage = Loadable({\n  loader: () => import('./Reader/Reader' /* webpackChunkName: \"reader-page\" */),\n  loading: Loader,\n  timeout: 10000,\n  delay: 200,\n});\n\nconst App = () => (\n  <div>\n    <Switch>\n      <Route path=\"/reader\" component={AsyncReaderPage} />\n      <Redirect from=\"/*\" to=\"/reader\" />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <Route component={App} />\n  </HashRouter>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}